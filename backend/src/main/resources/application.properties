#spring.application.name=auction-system
#spring.datasource.url=jdbc:mysql://localhost:3306/auction
#spring.datasource.username=root
#spring.datasource.password=Abcd@1234
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.main.allow-bean-definition-overriding=true
#
#
#server.port=8080
#

#spring.application.name=auction-system
#spring.datasource.url=${DB_URL}
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.main.allow-bean-definition-overriding=true
#
#server.port=8080
spring.application.name=auction-system

# PostgreSQL config from Supabase
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.main.allow-bean-definition-overriding=true

# PostgreSQL-specific Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Server configuration
server.port=${PORT:8080}
server.address=0.0.0.0


# Production optimizations
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

# Connection pool settings for production
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# PostgreSQL-specific connection settings to fix prepared statement conflicts
spring.datasource.hikari.data-source-properties.prepareThreshold=0
spring.datasource.hikari.data-source-properties.preparedStatementCacheQueries=0
spring.datasource.hikari.data-source-properties.cachePrepStmts=false

# CORS configuration (update with your frontend URL)
# cors.allowed.origins=${CORS_ORIGINS:http://localhost:3000}

cors.allowed.origins=${CORS_ORIGINS:https://vehicle-auction-system.netlify.app,https://vehicle-auction-system-frontend.vercel.app,http://localhost:3000}

# SSL/TLS configuration for production
spring.datasource.hikari.data-source-properties.ssl=true
spring.datasource.hikari.data-source-properties.sslmode=require
